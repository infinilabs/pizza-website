<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Aggregation on INFINI Pizza</title><link>/docs/references/aggregation/</link><description>Recent content in Aggregation on INFINI Pizza</description><generator>Hugo -- gohugo.io</generator><atom:link href="/docs/references/aggregation/index.xml" rel="self" type="application/rss+xml"/><item><title>Avg aggregation</title><link>/docs/references/aggregation/avg/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs/references/aggregation/avg/</guid><description>Avg aggregation # A single-value metrics aggregation that computes the average of numeric values that are extracted from the aggregated documents.
Examples # Assuming the data consists of documents representing exams grades (between 0 and 100) of students we can average their scores with:
POST /exams/_search { &amp;#34;aggs&amp;#34;: { &amp;#34;avg_grade&amp;#34;: { &amp;#34;avg&amp;#34;: { &amp;#34;field&amp;#34;: &amp;#34;grade&amp;#34; } } } } The above aggregation computes the average grade over all documents.</description></item><item><title>Date histogram aggregation</title><link>/docs/references/aggregation/date-histogram/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs/references/aggregation/date-histogram/</guid><description>Date histogram aggregation # This multi-bucket aggregation is similar to the normal histogram, but it can only be used with date or date range values. Because dates are represented internally in Elasticsearch as long values, it is possible, but not as accurate, to use the normal histogram on dates as well. The main difference in the two APIs is that here the interval can be specified using date/time expressions. Time-based data requires special support because time-based intervals are not always a fixed length.</description></item><item><title>Max aggregation</title><link>/docs/references/aggregation/max/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs/references/aggregation/max/</guid><description>Max aggregation # A single-value metrics aggregation that keeps track and returns the maximum value among the numeric values extracted from the aggregated documents.
Examples # Computing the max price value across all documents:
POST /sales/_search { &amp;#34;aggs&amp;#34;: { &amp;#34;max_price&amp;#34;: { &amp;#34;max&amp;#34;: { &amp;#34;field&amp;#34;: &amp;#34;price&amp;#34; } } } } Response:
{ ... &amp;#34;aggregations&amp;#34;: { &amp;#34;max_price&amp;#34;: { &amp;#34;value&amp;#34;: 200.0 } } } As can be seen, the name of the aggregation (max_price above) also serves as the key by which the aggregation result can be retrieved from the returned response.</description></item><item><title>Min aggregation</title><link>/docs/references/aggregation/min/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs/references/aggregation/min/</guid><description>Min aggregation # A single-value metrics aggregation that keeps track and returns the minimum value among numeric values extracted from the aggregated documents.
Examples # Computing the min price value across all documents:
POST /sales/_search { &amp;#34;aggs&amp;#34;: { &amp;#34;min_price&amp;#34;: { &amp;#34;min&amp;#34;: { &amp;#34;field&amp;#34;: &amp;#34;price&amp;#34; } } } } Response:
{ ... &amp;#34;aggregations&amp;#34;: { &amp;#34;min_price&amp;#34;: { &amp;#34;value&amp;#34;: 10.0 } } } As can be seen, the name of the aggregation (min_price above) also serves as the key by which the aggregation result can be retrieved from the returned response.</description></item><item><title>Percentiles aggregation</title><link>/docs/references/aggregation/percentiles/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs/references/aggregation/percentiles/</guid><description>Percentiles aggregation # A multi-value metrics aggregation that calculates one or more percentiles over numeric values extracted from the aggregated documents.
Percentiles show the point at which a certain percentage of observed values occur. For example, the 95th percentile is the value which is greater than 95% of the observed values.
Percentiles are often used to find outliers. In normal distributions, the 0.13th and 99.87th percentiles represents three standard deviations from the mean.</description></item><item><title>Sum aggregation</title><link>/docs/references/aggregation/sum/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs/references/aggregation/sum/</guid><description>Sum aggregation # A single-value metrics aggregation that sums up numeric values that are extracted from the aggregated documents.
Examples # Assuming the data consists of documents representing sales records we can sum the sale price of all hats with:
POST /sales/_search { &amp;#34;query&amp;#34;: { &amp;#34;constant_score&amp;#34;: { &amp;#34;filter&amp;#34;: { &amp;#34;match&amp;#34;: { &amp;#34;type&amp;#34;: &amp;#34;hat&amp;#34; } } } }, &amp;#34;aggs&amp;#34;: { &amp;#34;hat_prices&amp;#34;: { &amp;#34;sum&amp;#34;: { &amp;#34;field&amp;#34;: &amp;#34;price&amp;#34; } } } } Resulting in:</description></item><item><title>Terms aggregation</title><link>/docs/references/aggregation/terms/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs/references/aggregation/terms/</guid><description>Terms aggregation # A multi-bucket value source based aggregation where buckets are dynamically built - one per unique value.
Examples # POST /_search { &amp;#34;aggs&amp;#34;: { &amp;#34;genres&amp;#34;: { &amp;#34;terms&amp;#34;: { &amp;#34;field&amp;#34;: &amp;#34;genre&amp;#34; } } } } Response:
{ ... &amp;#34;aggregations&amp;#34;: { &amp;#34;genres&amp;#34;: { &amp;#34;doc_count_error_upper_bound&amp;#34;: 0, &amp;#34;sum_other_doc_count&amp;#34;: 0, &amp;#34;buckets&amp;#34;: [ { &amp;#34;key&amp;#34;: &amp;#34;electronic&amp;#34;, &amp;#34;doc_count&amp;#34;: 6 }, { &amp;#34;key&amp;#34;: &amp;#34;rock&amp;#34;, &amp;#34;doc_count&amp;#34;: 3 }, { &amp;#34;key&amp;#34;: &amp;#34;jazz&amp;#34;, &amp;#34;doc_count&amp;#34;: 2 } ] } } } Parameters for terms # field</description></item><item><title>Value count aggregation</title><link>/docs/references/aggregation/value-count/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs/references/aggregation/value-count/</guid><description>Value count aggregation # A single-value metrics aggregation that counts the number of values that are extracted from the aggregated documents. Typically, this aggregator will be used in conjunction with other single-value aggregations. For example, when computing the avg one might be interested in the number of values the average is computed over.
value_count does not de-duplicate values, so even if a field has duplicates each value will be counted individually.</description></item></channel></rss>